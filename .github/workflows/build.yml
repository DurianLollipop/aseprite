name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: macos-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}-${{ matrix.build_type }}
    - uses: turtlesec-no/get-ninja@main
    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi
        # download skia m102
        curl -O -L "https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-macOS-Release-arm64.zip"
        unzip Skia-macOS-Release-arm64.zip -d skia-m102
        rm Skia-macOS-Release-arm64.zip
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DENABLE_TESTS=ON \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
        ls
        cd ../
        # bundle app from trial
        mkdir bundle
        cd bundle
        curl -O -J "https://www.aseprite.org/downloads/trial/Aseprite-v1.3.2-trial-macOS.dmg"
        mkdir mount
        yes qy | hdiutil attach -quiet -nobrowse -noverify -noautoopen -mountpoint mount Aseprite-v1.3.2-trial-macOS.dmg
        cp -r mount/Aseprite.app .
        hdiutil detach mount
        rm -rf Aseprite.app/Contents/MacOS/aseprite
        cp -r ../aseprite/build/bin/aseprite Aseprite.app/Contents/MacOS/aseprite
        rm -rf Aseprite.app/Contents/Resources/data
        cp -r ../aseprite/build/bin/data Aseprite.app/Contents/Resources/data
        ls
        cd .. 
        ls
    - name: upload-build-file
      uses: actions/upload-artifact@v3
      with:
        name: build_Aseprite
        path: build/bin/
